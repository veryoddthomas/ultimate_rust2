# ref: https://docs.rs/log4rs/latest/log4rs/encode/pattern/index.html#formatters
# ref: https://docs.rs/log4rs/latest/log4rs/config/index.html

# Scan this file for changes every 30 seconds
# refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      # pattern: "{h({d(%+)(utc)} [{f}:{L}] {l:<6} {M}:{m})}{n}"
      # pattern: "{d(%+)(utc)} [{f}:{L}] {l:<6} {M}:{m}{n}"
      # pattern: "{d(%+)(utc)} [{f}:{L}] {h({l:<6})} {M}:{m}{n}"
      # pattern: "[{d(%+)(utc)} {h({l:<6})} {M}] {m}{n}"
      # pattern: "[{d(%Y-%m-%dT%H:%M:%S)} {h({l:<6})} {M}] {m}{n}"
      # pattern: "[{d(%Y-%m-%dT%H:%M:%S)} {h({l:<6})} {M}] {m}{n}"
      # pattern: "{h([)}{d(%Y-%m-%dT%H:%M:%S)} {h({l:<6})} {M}{h(])} {m}{n}"
      pattern: "{h([{d(%Y-%m-%dT%H:%M:%S)} {l:<6} {M}])} {m}{n}"

  # An appender named "requests" that writes to a file with a custom pattern encoder
  requests:
    kind: file
    path: "log/requests.log"
    encoder:
      # pattern: "{d} - {m}{n}"
      # pattern: "{h([{d(%Y-%m-%dT%H:%M:%S)} {l:<6} {M}])} {m}{n}"
      pattern: "[{d(%Y-%m-%dT%H:%M:%S)} {l:<6} {M}] {m}{n}"

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  # level filtering can't be lowered dynamically,
  # but it can be increased
  level: trace
  appenders:
    - stdout
    - requests

loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  app::backend::db:
    level: info

  # Route log events sent to the "app::requests" logger to the "requests" appender,
  # and *not* the normal appenders installed at the root
  app::requests:
    level: info
    appenders:
      - requests
    additive: false